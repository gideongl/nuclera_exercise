🧪 Playwright + Pytest Test Framework (Python)

Enterprise Setup Guide

🚀 Running Tests

Run all tests and generate an HTML report:

pytest --html=reports/test_report.html --self-contained-html


Run only a specific test file:

pytest tests/test_login.py --html=reports/login_report.html --self-contained-html


Run a test by node ID (e.g. function name):

pytest tests/test_login.py::TestLogin::test_valid_user

📂 Key Directories

logs/
Contains test_run.log, a central log file for the entire run.
Each test also embeds relevant logs into the pytest HTML report.

screenshots/
Screenshots are automatically saved for any failed test.
Linked inside the HTML report under Failure Screenshot.

videos/
Video recordings of failed tests are stored here.
Linked inside the HTML report under Failure Video.

reports/
HTML test reports generated by pytest-html.
Open in your browser to see results, logs, screenshots, and videos.

📊 Report Features

Open reports/test_report.html in a browser after a run.

For each test case you’ll see:

✅ Pass/Fail/Skip status

📄 Test Logs tab → embedded last 200 lines from test_run.log

🖼️ Failure Screenshot (if test failed)

🎥 Failure Video (if test failed)

🔧 Debugging Workflow

Open the latest report in reports/.

If a test failed:

Expand Test Logs → read debug output

Open Failure Screenshot → see page state on failure

Play Failure Video → watch test execution

For deep dives, open logs/test_run.log in your editor/IDE.

🌐 Notes

By default, videos are saved in .webm format (playable in any browser).

If you want persistent logs for each test run, archive the logs/ and reports/ folders in your CI pipeline artifacts.

✅ With this, your team can confidently run, review, and debug tests without having to reproduce failures locally.